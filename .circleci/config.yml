version: 2
jobs:
  unit-test:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          name: Restore cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: NODE_ENV=development npm install
      - save_cache:
          name: Save cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Unit testing
          command: npm test
      - run:
          name: Passing linter
          command: npm run lint
  functional-test:
    docker:
      - image: circleci/ubuntu-server:trusty-latest
    steps:
      - checkout
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Build docker image
          command: docker-compose build
      - run:
          name: Functional testing
          command: docker-compose up test-functional

workflows:
  version: 2
  build_and_test:
    jobs:
      - unit-test
      - functional-test
